{"version":3,"sources":["../src/delay-promise-x.js"],"names":[],"mappings":"AAAA;;;;;AAMA,OAAO,QAAP,MAAqB,iBAArB;AACA,OAAO,SAAP,MAAsB,kBAAtB;AACA,OAAO,KAAP,MAAkB,cAAlB;AAEA,IAAM,gBAAgB,GAAG,gBAAzB;AAEA;;;;;;;;AAOA,eAAe,SAAS,YAAT,CAAsB,YAAtB,EAA8C;AAC3D,MAAM,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,YAAD,CAAV,EAA0B,gBAA1B,CAAhB;;AAEA,wDAAkB;AAChB,QAAM,aAAa,GAAG,SAAS,aAAT,CAAuB,GAAvB,EAA4B;AAChD,aAAO,YAAY,CAAC,EAAD,CAAZ,CAAiB,IAAjB,CAAsB,QAAQ,CAAC,GAAD,CAA9B,CAAP;AACD,KAFD;AAIA;;;AACA,WAAO,OAAO,CAAC,OAAR,mDAA0B,IAA1B,CAA+B,aAA/B,CAAP;AACD;;AAED,MAAM,eAAe,GAAG,SAAS,eAAT,CAAyB,OAAzB,EAAkC,MAAlC,EAA0C;AAChE,QAAI;AACF,MAAA,UAAU,CAAC,OAAD,EAAU,EAAV,CAAV;AACD,KAFD,CAEE,OAAO,KAAP,EAAc;AACd,MAAA,MAAM,CAAC,KAAD,CAAN;AACD;AACF,GAND;AAQA;;;AACA,SAAO,IAAI,OAAJ,CAAY,eAAZ,CAAP;AACD","file":"delay-promise-x.esm.js","sourcesContent":["/**\n * @file Utility that creates a delayed promise.\n * @copyright Copyright (c) 2018-present, Graham Fairweather\n * @module delayPromise\n */\n\nimport constant from 'lodash/constant';\nimport toInteger from 'lodash/toInteger';\nimport clamp from 'lodash/clamp';\n\nconst MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Create a delayed promise.\n *\n * @param {(number|string)} milliseconds - The number of milliseconds to delay by.\n * @param {*} [value] - The value to be resolved with.\n * @returns {Promise} The delayed promise.\n */\nexport default function delayPromise(milliseconds, ...value) {\n  const ms = clamp(toInteger(milliseconds), MAX_SAFE_INTEGER);\n\n  if (value.length) {\n    const valueExecutor = function valueExecutor(arg) {\n      return delayPromise(ms).then(constant(arg));\n    };\n\n    /* eslint-disable-next-line compat/compat */\n    return Promise.resolve(value[0]).then(valueExecutor);\n  }\n\n  const timeoutExecutor = function timeoutExecutor(resolve, reject) {\n    try {\n      setTimeout(resolve, ms);\n    } catch (error) {\n      reject(error);\n    }\n  };\n\n  /* eslint-disable-next-line compat/compat */\n  return new Promise(timeoutExecutor);\n}\n"]}